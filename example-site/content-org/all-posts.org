#+HUGO_BASE_DIR: ../
#+SEQ_TODO: TODO DRAFT DONE

* Preparation
:PROPERTIES:
:EXPORT_FILE_NAME: prep
:EXPORT_DATE: 2017-07-12T17:05:38-04:00
:END:
1. Be the root directory for this Hugo site (the directory containing
   =config.toml=).
2. Run
  #+BEGIN_EXAMPLE
  hugo server --port 1111
  #+END_EXAMPLE
3. See the site served on "http://localhost:1111/"
* Post 1
:PROPERTIES:
:EXPORT_FILE_NAME: post-1
:EXPORT_DATE: 2017-07-12T17:31:56-04:00
:END:
Export this *first* post only by bringing point here and doing =M-x org-hugo-publish-subtree=.
* Post 2
:PROPERTIES:
:EXPORT_FILE_NAME: post-2
:EXPORT_DATE: 2017-07-12T17:05:38-04:00
:END:
Export this *second* post only by bringing point here and doing =M-x org-hugo-publish-subtree=.
* Image
:PROPERTIES:
:EXPORT_TAGS: image
:END:
** Image links
:PROPERTIES:
:EXPORT_FILE_NAME: image-links
:EXPORT_DATE: 2017-07-15T07:49:44-04:00
:END:
This is some text before the first heading of this post.
*** Unclickable image (works!)
[[/images/org-mode-unicorn-logo.png]]

-----
+To be fixed+ (*Now fixed*): The sub-headings in a post get exported as /Heading 1/
 instead of /Heading 2/.

For example, this sub-section's heading is exported as:
#+BEGIN_EXAMPLE
# Unclickable image
#+END_EXAMPLE
instead of
#+BEGIN_EXAMPLE
## Unclickable image
#+END_EXAMPLE

-----
*Solution*: Above is fixed by setting =HUGO_OFFSET_LEVEL= to 1.

So the sub-heading title and the post title both get the /Heading 1/
tag and look the same size.
*** Clickable link that opens the image (works!)
[[/images/org-mode-unicorn-logo.png][Click here to see the unicorn]]
*** Clickable image that opens the image (works!)
Click below image to jump to the unicorn image.
[[file:/images/org-mode-unicorn-logo.png][file:/images/org-mode-unicorn-logo.png]]

- NOTE :: =file:= has to be used in both Link and Description components
          of the Org link.
*** Image with =ATTR_HTML= [[https://github.com/kaushalmodi/ox-hugo/issues/17][Issue # 17]]
#+ATTR_HTML: :class inset
[[/images/org-mode-unicorn-logo.png]]

[[https://github.com/kaushalmodi/ox-hugo/issues/17#issuecomment-313627728][Discussion]]
**** COMMENT Below will not work!
You cannot wrap markdown code inside HTML.

As /rdwatters/ says [[https://discourse.gohugo.io/t/is-it-possible-to-insert-html-code-in-markdown-content/4867/4?u=kaushalmodi][here]],
#+BEGIN_QUOTE
HTML can be part of markdown because HTML-inside-markdown is part of
the spec. That said, remember that the spec disallows markdown nested
inside of HTML. So if you create a div, just make sure everything
inside that div is valid HTML.
#+END_QUOTE

#+BEGIN_EXPORT md
<div class="inset">
#+END_EXPORT
[[/images/org-mode-unicorn-logo.png]]
#+BEGIN_EXPORT md
</div>
#+END_EXPORT
*** Link to image outside of standard Hugo locations
[[../src-images/copy-of-unicorn-logo.png]]
** Image captions
:PROPERTIES:
:EXPORT_DATE: 2017-07-19
:EXPORT_FILE_NAME: image-captions
:END:
Some text before image.
#+CAPTION: A unicorn!
[[/images/org-mode-unicorn-logo.png]]
Some more text, after image.
* Setting heading anchors
:PROPERTIES:
:EXPORT_FILE_NAME: setting-heading-anchors
:EXPORT_DATE: 2017-07-12T17:05:39-04:00
:END:
** Heading 1 of the post
:PROPERTIES:
:CUSTOM_ID: cool-ref-1
:END:
Something
*** Heading 1.1 of the post
:PROPERTIES:
:CUSTOM_ID: cool-ref-1.1
:END:
Something else
** Heading 2 of the post
:PROPERTIES:
:CUSTOM_ID: cool-ref-2
:END:
Something 2
*** Heading 2.1 of the post
:PROPERTIES:
:CUSTOM_ID: cool-ref-2.1
:END:
Something 2.1
* Post heading with crazy characters
:PROPERTIES:
:EXPORT_FILE_NAME: post-heading-slugs
:EXPORT_DATE: 2017-07-12T13:46:33-04:00
:END:
** Releasing version 1.1
** Foo ( Bar ) Baz
** (Foo)Bar.Baz&Zoo
** Hey! I have a link [[https://example.org][here]] (Awesome!)
* Excluded post                                                    :noexport:
:PROPERTIES:
:EXPORT_FILE_NAME: excluded-post
:END:
This post must not be exported as it is tagged =noexport=.
* COMMENT Commented post
:PROPERTIES:
:EXPORT_FILE_NAME: commented-post
:END:
This post must not be exported as it is commented.
* Test tags                                                         :abc:def:
:PROPERTIES:
:EXPORT_FILE_NAME: test-tags
:EXPORT_DATE: 2017-07-12T13:48:01-04:00
:END:
Testing tags set using Org tags in headings.
* Section
** Articles
:PROPERTIES:
:EXPORT_HUGO_SECTION: articles
:END:
*** Article 1
:PROPERTIES:
:EXPORT_FILE_NAME: article-1
:EXPORT_DATE: 2017-07-19T08:34:29-04:00
:END:
First article.

This will land in =content/articles/= as the parent of this subtree
sets =EXPORT_HUGO_SECTION= to =articles=. Note that the theme needs to
define at least the =single.html=, either in the =layouts/_default/=
directory, or =layouts/articles/=, either in the Hugo base dir or the
theme dir.
*** Article 2
:PROPERTIES:
:EXPORT_FILE_NAME: article-2
:EXPORT_DATE: 2017-07-19T08:34:22-04:00
:END:
Second article.

This will also land in =content/articles/= the same way.
** Emacs posts                                                        :emacs:
:PROPERTIES:
:EXPORT_HUGO_SECTION: posts
:END:
*** Emacs Post 1                                                        :foo:
:PROPERTIES:
:EXPORT_FILE_NAME: emacs-post-1
:EXPORT_DATE: 2017-07-12T17:31:56-04:00
:END:
Here is the first post on Emacs.
*** Emacs Post 2                                                        :bar:
:PROPERTIES:
:EXPORT_FILE_NAME: emacs-post-2
:EXPORT_DATE: 2017-07-12T17:31:56-04:00
:END:
Here is the second post on Emacs.
* Tables                                                              :table:
** Simple Table
:PROPERTIES:
:EXPORT_FILE_NAME: simple-table
:EXPORT_DATE: 2017-07-12T19:25:56-04:00
:END:
| h1 | h2 |
| a  | b  |
| c  | d  |
** Table with narrowest cols
:PROPERTIES:
:EXPORT_FILE_NAME: table-with-narrowest-columns
:EXPORT_DATE: 2017-07-12T19:26:00-04:00
:END:
| 1 | 2 | 3 |
| a | b | e |
| c | d | f |
** Table with top border
:PROPERTIES:
:EXPORT_FILE_NAME: table-top-border
:EXPORT_DATE: 2017-07-12T19:26:04-04:00
:END:
|---+---+---+---|
| 1 | 2 | 3 | 4 |
| a | b | e | g |
| c | d | f | h |
** Table with bottom border
:PROPERTIES:
:EXPORT_FILE_NAME: table-bottom-border
:EXPORT_DATE: 2017-07-12T19:26:06-04:00
:END:
| 1 | 2 | 3 | 4 |
| a | b | e | g |
| c | d | f | h |
|---+---+---+---|
** Table with top and bottom border
:PROPERTIES:
:EXPORT_FILE_NAME: table-top-and-bottom-border
:EXPORT_DATE: 2017-07-12T19:26:10-04:00
:END:
|---+---+---+---|
| 1 | 2 | 3 | 4 |
| a | b | e | g |
| c | d | f | h |
|---+---+---+---|
** Table with rule after first row
:PROPERTIES:
:EXPORT_FILE_NAME: table-only-rule-after-first-row
:EXPORT_DATE: 2017-07-12T19:26:13-04:00
:END:
| 1 | 2 | 3 | 4 |
|---+---+---+---|
| a | b | e | g |
| c | d | f | h |
** Table with borders and rule after first
:PROPERTIES:
:EXPORT_FILE_NAME: table-with-borders-and-rule-after-first
:EXPORT_DATE: 2017-07-12T19:26:16-04:00
:END:
|---+---+---+---|
| 1 | 2 | 3 | 4 |
|---+---+---+---|
| a | b | e | g |
| c | d | f | h |
|---+---+---+---|
* Source blocks                                                   :src-block:
** Code-fenced source blocks
:PROPERTIES:
:EXPORT_FILE_NAME: code-fenced-src-blocks
:EXPORT_DATE: 2017-07-13T17:49:22-04:00
:END:
Here are few variables that you might like to change in the =local.mk=:
- =prefix= :: Org installation directory
 #+BEGIN_SRC makefile
prefix = /dir/where/you/want/to/install/org # Default: /usr/share
#+END_SRC
 The =.el= files will go to =$(prefix)/emacs/site-lisp/org= by
              default. If you'd like to change that, you can tweak the
              =lispdir= variable.
- =infodir= :: Org Info installation directory. I like to keep the
                   Info file for development version of Org in a separate
                   directory.
 #+BEGIN_SRC makefile
infodir = $(prefix)/org/info # Default: $(prefix)/info
#+END_SRC
- =ORG_MAKE_DOC= :: Types of Org documentation you'd like to build by
                    default.
 #+BEGIN_SRC makefile
# Define below you only need info documentation, the default includes html and pdf
ORG_MAKE_DOC = info pdf card # html
#+END_SRC
- =ORG_ADD_CONTRIB= :: Packages from the =contrib/= directory that
     you'd like to build along with Org. Below are the ones on my
     /must-have/ list.
 #+BEGIN_SRC makefile
# Define if you want to include some (or all) files from contrib/lisp
# just the filename please (no path prefix, no .el suffix), maybe with globbing
#   org-eldoc - Headline breadcrumb trail in minibuffer
#   ox-extra - Allow ignoring just the heading, but still export the body of those headings
#   org-mime - Convert org buffer to htmlized format for email
ORG_ADD_CONTRIB = org-eldoc ox-extra org-mime
#+END_SRC
** Source block with caption                                       :noexport:
:PROPERTIES:
:EXPORT_FILE_NAME: source-block-caption
:EXPORT_DATE: 2017-07-19
:END:
#+CAPTION: Prefix value in =local.mk=
#+BEGIN_SRC makefile
prefix = /dir/where/you/want/to/install/org # Default: /usr/share
#+END_SRC
* Example block                                                     :example:
** Simple
:PROPERTIES:
:EXPORT_DATE: 2017-07-19
:EXPORT_FILE_NAME: example-simple
:END:
#+BEGIN_EXAMPLE
This is an example
#+END_EXAMPLE
* Menu in front matter                                                 :menu:
** Menu Meta Data in TOML Front Matter
:PROPERTIES:
:EXPORT_HUGO_MENU: :menu "something here" :weight 80 :parent posts :identifier foo1
:END:
*** Overriding few menu properties
:PROPERTIES:
:EXPORT_FILE_NAME: menu-alist-meta-data-toml-override-partial
:EXPORT_DATE: 2017-07-18
:EXPORT_HUGO_MENU_OVERRIDE: :weight 10 :identifier ov-partial
:END:
For this post, we should see just the menu /weight/ and /identifier/
properties get overridden.

You need to set unique menu identifiers, else you get a Hugo error
like this:
#+BEGIN_EXAMPLE
ERROR 2017/07/18 12:32:14 Two or more menu items have the same name/identifier in Menu "main": "menu-meta-data-in-yaml-front-matter".
Rename or set an unique identifier.
#+END_EXAMPLE
*** Overriding menu properties completely
:PROPERTIES:
:EXPORT_FILE_NAME: menu-alist-meta-data-toml-override-full
:EXPORT_DATE: 2017-07-18
:EXPORT_HUGO_MENU: :menu test :weight 50
:END:
For this post, we see that no menu properties are inherited from the
parent; only the menu properties set in his subtree are effective.
*** Auto assign weights
:PROPERTIES:
:EXPORT_HUGO_MENU: :menu "auto weight"
:END:
**** Post with menu 1
:PROPERTIES:
:EXPORT_FILE_NAME: post-with-menu-1
:EXPORT_DATE: 2017-07-20
:END:
**** Post with menu 2
:PROPERTIES:
:EXPORT_FILE_NAME: post-with-menu-2
:EXPORT_DATE: 2017-07-20
:END:
**** Post with menu 3
:PROPERTIES:
:EXPORT_FILE_NAME: post-with-menu-3
:EXPORT_DATE: 2017-07-20
:END:
**** Post with menu 4
:PROPERTIES:
:EXPORT_FILE_NAME: post-with-menu-4
:EXPORT_DATE: 2017-07-20
:END:
**** Post with menu 5
:PROPERTIES:
:EXPORT_FILE_NAME: post-with-menu-5
:EXPORT_DATE: 2017-07-20
:END:
** Menu Meta Data in YAML Front Matter                                 :yaml:
:PROPERTIES:
:EXPORT_HUGO_FRONT_MATTER_FORMAT: yaml
:END:
*** White space in menu entry
:PROPERTIES:
:EXPORT_FILE_NAME: menu-meta-data-yaml2
:EXPORT_DATE: 2017-07-19
:EXPORT_HUGO_MENU: :menu "something here" :weight 25
:END:
Testing the addition of /menu/ meta data to the YAML front matter.
Here the front matter format is set to YAML using the
=HUGO_FRONT_MATTER_FORMAT= key in property drawer.

Here there is white space in menu entry keyword.
*** White space in menu name
:PROPERTIES:
:EXPORT_FILE_NAME: menu-meta-data-yaml3
:EXPORT_DATE: 2017-07-19
:EXPORT_HUGO_MENU: :menu main :weight 25 :parent posts :name "Menu in YAML"
:END:
Testing the addition of /menu/ meta data to the YAML front matter.
Here the front matter format is set to YAML using the
=HUGO_FRONT_MATTER_FORMAT= key in property drawer.

Here there is white space in menu name property.
* TODO Pre-Draft State
:PROPERTIES:
:EXPORT_FILE_NAME: draft-state-todo
:EXPORT_DATE: 2017-07-12T17:05:41-04:00
:END:
If a post has the =TODO= keyword, the =draft= front matter variable
should be set to =true=.

Idea to to mark a post or blog idea as =TODO= that you yet have to
start writing.
* DRAFT Draft state
:PROPERTIES:
:EXPORT_FILE_NAME: draft-state-draft
:EXPORT_DATE: 2017-07-12T13:46:16-04:00
:END:
If a post has the =DRAFT= keyword too, the =draft= front matter variable
should be set to =true=.

Idea is to mark a post as =DRAFT= that you have already started
writing, or are in the process at the moment, but it is not yet ready
to be published
* COMMENT Local Variables                                           :ARCHIVE:
# Local Variables:
# fill-column: 70
# eval: (auto-fill-mode 1)
# End:
